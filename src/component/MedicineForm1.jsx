import { useState } from 'react';
import { useNavigate } from 'react-router-dom'; // ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
import Swal from 'sweetalert2'; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ SweetAlert2

function MedicineForm1() {
  const [selectedMealTime, setSelectedMealTime] = useState(null);
  const [medicineName, setMedicineName] = useState('');
  const [medicineQuantity, setMedicineQuantity] = useState('');
  const [medicineDays, setMedicineDays] = useState('');
  const [error, setError] = useState('');
  const [selectedLogo, setSelectedLogo] = useState(null); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const navigate = useNavigate(); // ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤

  const handleLogoSelection = (logo) => {
    setSelectedLogo(logo); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  };

  const handleMealTimeSelection = (value) => {
    setSelectedMealTime(value);
  };

  const handleSubmit = () => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    if (!medicineName || !medicineQuantity || !medicineDays || !selectedMealTime || !selectedLogo) {
      setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á');
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á!',
      });
    } else {
      setError('');
      // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô localStorage
      const medicineData = JSON.parse(localStorage.getItem('medicineData')) || [];
      const newMedicine = {
        medicineName,
        medicineQuantity,
        medicineDays,
        selectedMealTime,
        selectedLogo,
      };
      localStorage.setItem('medicineData', JSON.stringify([...medicineData, newMedicine]));

      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      Swal.fire({
        icon: 'success',
        title: '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
        text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≤‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß',
      });

      // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
      navigate('/medicine-form2'); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    }
  };

  return (
    <div className="container mx-auto py-10 flex flex-col justify-center items-center bg-gray-50">
      <div className="bg-white shadow-lg rounded-xl w-full max-w-sm sm:max-w-md p-6">
        <div className="flex items-center justify-between">
          <button className="text-gray-500">
            <span onClick={()=>{ navigate("/") }}>&lt;</span>
          </button>
          <p className="text-gray-800 font-bold">1 / 2</p>
          <button onClick={()=>{ navigate("/") }} className="text-gray-500" >X</button>
        </div>

        <h1 className="text-center text-xl font-semibold my-4">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</h1>

        <div className="flex justify-center space-x-4 my-4">
          <div
            onClick={() => handleLogoSelection('üíä')}
            className={`w-12 h-12 flex justify-center items-center rounded-full border cursor-pointer ${selectedLogo === 'üíä' ? 'bg-blue-600' : 'bg-gray-100'}`}
          >
            <span className="text-gray-600">üíä</span>
          </div>
          <div
            onClick={() => handleLogoSelection('üåø')}
            className={`w-12 h-12 flex justify-center items-center rounded-full border cursor-pointer ${selectedLogo === 'üåø' ? 'bg-blue-600' : 'bg-gray-100'}`}
          >
            <span className="text-green-600">üåø</span>
          </div>
          <div
            onClick={() => handleLogoSelection('üß¥')}
            className={`w-12 h-12 flex justify-center items-center rounded-full border cursor-pointer ${selectedLogo === 'üß¥' ? 'bg-blue-600' : 'bg-gray-100'}`}
          >
            <span className="text-blue-600">üß¥</span>
          </div>
        </div>

        <div className="space-y-4 my-4">
          <div>
            <p className="text-gray-600">‡∏ä‡∏∑‡πà‡∏≠</p>
            <input
              type="text"
              className="w-full p-2 border rounded-md"
              value={medicineName}
              onChange={(e) => setMedicineName(e.target.value)}
              placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤"
            />
          </div>
          <div>
            <p className="text-gray-600">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏¢‡∏≤</p>
            <input
              type="number"
              className="w-full p-2 border rounded-md"
              value={medicineQuantity}
              onChange={(e) => setMedicineQuantity(e.target.value)}
              placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏¢‡∏≤"
            />
          </div>
          <div>
            <p className="text-gray-600">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô</p>
            <input
              type="number"
              className="w-full p-2 border rounded-md"
              value={medicineDays}
              onChange={(e) => setMedicineDays(e.target.value)}
              placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô"
            />
          </div>
        </div>

        <div className="my-4">
          <p className="font-medium text-gray-700 mb-2">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤:</p>
          <div className="flex space-x-4">
            <label className="flex items-center space-x-2">
              <input
                type="radio"
                name="mealTime"
                value="‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£"
                className="hidden"
                checked={selectedMealTime === '‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£'}
                onChange={() => handleMealTimeSelection('‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£')}
              />
              <span
                className={`px-4 py-2 rounded-lg cursor-pointer border-2 ${selectedMealTime === '‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£' ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-black'}`}
              >
                ‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£
              </span>
            </label>
            <label className="flex items-center space-x-2">
              <input
                type="radio"
                name="mealTime"
                value="‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£"
                className="hidden"
                checked={selectedMealTime === '‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£'}
                onChange={() => handleMealTimeSelection('‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£')}
              />
              <span
                className={`px-4 py-2 rounded-lg cursor-pointer border-2 ${selectedMealTime === '‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£' ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-black'}`}
              >
                ‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£
              </span>
            </label>
          </div>
        </div>

        {error && <p className="text-white text-sm text-center p-3 m-3 rounded-lg bg-red-400">{error}</p>}

        <button
          onClick={handleSubmit}
          className="w-full py-2 bg-blue-600 text-white rounded-lg font-semibold"
        >
          ‡∏ï‡πà‡∏≠‡πÑ‡∏õ
        </button>
      </div>
    </div>
  );
}

export default MedicineForm1;
